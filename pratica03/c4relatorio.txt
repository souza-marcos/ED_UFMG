1. Na primeira vista, aparentemente observa que está 
  liberando da memória a variável _text_ antes mesmo
  de alocá-la. Além disso parece liberar a matriz 
  alocada de forma errada.

2. Utilizando o valgrind, confirmei a hipótese.
  Além disso temos a ocorrência de utilização de
  variável antes mesmo de alocá-la.

==116281== Memcheck, a memory error detector
==116281== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==116281== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==116281== Command: ./main
==116281== 
==116281== Use of uninitialised value of size 8
==116281==    at 0x10917A: main (c4correto.c:13)
==116281== 
==116281== Invalid write of size 4
==116281==    at 0x10917A: main (c4correto.c:13)
==116281==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==116281== 
==116281== 
==116281== Process terminating with default action of signal 11 (SIGSEGV)
==116281==  Access not within mapped region at address 0x0
==116281==    at 0x10917A: main (c4correto.c:13)
==116281==  If you believe this happened as a result of a stack
==116281==  overflow in your program's main thread (unlikely but
==116281==  possible), you can try to increase the size of the
==116281==  main thread stack using the --main-stacksize= flag.
==116281==  The main thread stack size used in this run was 8388608.
==116281== 
==116281== HEAP SUMMARY:
==116281==     in use at exit: 0 bytes in 0 blocks
==116281==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==116281== 
==116281== All heap blocks were freed -- no leaks are possible
==116281== 
==116281== Use --track-origins=yes to see where uninitialised values come from
==116281== For lists of detected and suppressed errors, rerun with: -s
==116281== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


3. Descomentada a linhas 12, comentada a linha 18 a linha 21.

4. Verificado que não possui mais erros.

==116664== Memcheck, a memory error detector
==116664== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==116664== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==116664== Command: ./main
==116664== 
==116664== 
==116664== HEAP SUMMARY:
==116664==     in use at exit: 0 bytes in 0 blocks
==116664==   total heap usage: 6 allocs, 6 frees, 112 bytes allocated
==116664== 
==116664== All heap blocks were freed -- no leaks are possible
==116664== 
==116664== For lists of detected and suppressed errors, rerun with: -s
==116664== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
