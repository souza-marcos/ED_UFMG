--------------------------------------------------------------------------------
I1 cache:         32768 B, 64 B, 8-way associative
D1 cache:         32768 B, 64 B, 8-way associative
LL cache:         8388608 B, 64 B, direct-mapped
Command:          ./bin/matop -m -x 450 -y 450
Data file:        cachegrind.out.294116
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw Bc Bcm Bi Bim
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw Bc Bcm Bi Bim
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw Bc Bcm Bi Bim
Thresholds:       0.1 100 100 100 100 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                     I1mr           ILmr           Dr                     D1mr                DLmr           Dw                   D1mw             DLmw            Bc                   Bcm                Bi                 Bim            
--------------------------------------------------------------------------------
4,256,764,597 (100.0%) 1,578 (100.0%) 1,548 (100.0%) 1,902,411,968 (100.0%) 30,578,834 (100.0%) 2,952 (100.0%) 188,608,828 (100.0%) 176,993 (100.0%) 92,826 (100.0%) 190,376,522 (100.0%) 3,168,267 (100.0%) 4,674,238 (100.0%) 1,083 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                     I1mr        ILmr        Dr                     D1mr                DLmr           Dw                  D1mw             DLmw            Bc                  Bcm                Bi                 Bim           file:function
--------------------------------------------------------------------------------
3,556,107,485 (83.54%)  7 ( 0.44%)  7 ( 0.45%) 1,732,795,667 (91.08%) 30,549,889 (99.91%)     2 ( 0.07%) 91,327,957 (48.42%)       2 ( 0.00%)      0          91,530,902 (48.08%)   202,979 ( 6.41%)         0            0           /home/neg/Documents/dev/ed_ufmg/pratica04/src/mat.c:multiplicaMatrizes
  198,017,432 ( 4.65%) 78 ( 4.94%) 78 ( 5.04%)    40,315,402 ( 2.12%)          9 ( 0.00%)     8 ( 0.27%) 20,564,006 (10.90%)       0               0          33,322,020 (17.50%) 1,668,744 (52.67%)         0            0           ./stdio-common/./stdio-common/printf_fp.c:__printf_fp_l
   82,211,722 ( 1.93%)  4 ( 0.25%)  4 ( 0.26%)    28,351,360 ( 1.49%)          0              0          12,160,900 ( 6.45%)       0               0           9,714,276 ( 5.10%)   473,425 (14.94%)         0            0           ./stdio-common/./stdio-common/printf_fp.c:hack_digit
   69,413,953 ( 1.63%)  5 ( 0.32%)  5 ( 0.32%)    18,300,640 ( 0.96%)          0              0          17,626,001 ( 9.35%)       0               0           7,531,274 ( 3.96%)   536,305 (16.93%)         0            0           ./stdlib/./stdlib/divrem.c:__mpn_divrem
   61,883,370 ( 1.45%) 67 ( 4.25%) 67 ( 4.33%)    14,454,059 ( 0.76%)         14 ( 0.00%)    14 ( 0.47%) 10,376,147 ( 5.50%)       7 ( 0.00%)      7 ( 0.01%)  8,561,738 ( 4.50%)       539 ( 0.02%) 1,017,005 (21.76%) 907 (83.75%)  ./stdio-common/./stdio-common/vfprintf-internal.c:__vfprintf_internal
   55,080,152 ( 1.29%)  7 ( 0.44%)  7 ( 0.45%)    14,579,229 ( 0.77%)          0              0           8,099,378 ( 4.29%)       0               0          11,339,747 ( 5.96%)     1,817 ( 0.06%)         0            0           ./libio/./libio/fileops.c:_IO_file_overflow@@GLIBC_2.2.5
   47,333,484 ( 1.11%)  6 ( 0.38%)  6 ( 0.39%)     6,473,322 ( 0.34%)          0              0           4,450,230 ( 2.36%)       0               0           7,688,322 ( 4.04%)         3 ( 0.00%)         0            0           ./stdlib/../sysdeps/x86_64/mul_1.S:__mpn_mul_1
   17,814,467 ( 0.42%)  2 ( 0.13%)  2 ( 0.13%)     6,477,988 ( 0.34%)          0              0           1,619,497 ( 0.86%)       0               0           1,619,497 ( 0.85%)         8 ( 0.00%) 1,619,497 (34.65%)   1 ( 0.09%)  ./libio/./libio/genops.c:__overflow
   16,969,932 ( 0.40%)  5 ( 0.32%)  5 ( 0.32%)     4,848,552 ( 0.25%)          0              0           4,444,506 ( 2.36%)       0               0           2,020,230 ( 1.06%)         9 ( 0.00%)         0            0           ./stdlib/./stdlib/mul.c:__mpn_mul
   15,021,328 ( 0.35%)  5 ( 0.32%)  5 ( 0.32%)     3,696,934 ( 0.19%)          0              0           2,869,664 ( 1.52%)       2 ( 0.00%)      2 ( 0.00%)  1,657,283 ( 0.87%)     3,720 ( 0.12%)         4 ( 0.00%)   1 ( 0.09%)  ./libio/./libio/fileops.c:_IO_file_xsputn@@GLIBC_2.2.5
   12,555,000 ( 0.29%)  2 ( 0.13%)  2 ( 0.13%)     2,835,000 ( 0.15%)          2 ( 0.00%)     1 ( 0.03%)  1,620,000 ( 0.86%)       2 ( 0.00%)      0             405,000 ( 0.21%)         0                  0            0           ./stdlib/./stdlib/erand48_r.c:erand48_r
   12,014,048 ( 0.28%)  0           0              5,006,012 ( 0.26%)          0              0           1,002,012 ( 0.53%) 124,994 (70.62%) 92,185 (99.31%)  1,004,004 ( 0.53%)     2,024 ( 0.06%)         0            0           /home/neg/Documents/dev/ed_ufmg/pratica04/src/mat.c:inicializaMatrizNula
   11,336,479 ( 0.27%)  0           0                      0                   0              0                   0                0               0           1,619,497 ( 0.85%)         0                  0            0           ./libio/./libio/libioP.h:__overflow
   10,198,005 ( 0.24%)  2 ( 0.13%)  2 ( 0.13%)     2,039,811 ( 0.11%)          1 ( 0.00%)     1 ( 0.03%)  1,224,249 ( 0.65%)      15 ( 0.01%)     15 ( 0.02%)  3,263,942 ( 1.71%)     2,789 ( 0.09%)         0            0           ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms
    8,100,003 ( 0.19%)  2 ( 0.13%)  2 ( 0.13%)     2,834,998 ( 0.15%)          2 ( 0.00%)     2 ( 0.07%)    810,002 ( 0.43%)       0               0             405,000 ( 0.21%)         1 ( 0.00%)         0            0           ./stdlib/./stdlib/drand48-iter.c:__drand48_iterate
    7,729,238 ( 0.18%)  2 ( 0.13%)  2 ( 0.13%)       813,604 ( 0.04%)          1 ( 0.00%)     1 ( 0.03%)          0                0               0             813,604 ( 0.43%)       449 ( 0.01%)         0            0           ./string/../sysdeps/x86_64/multiarch/strchr-avx2.S:__strchrnul_avx2
    7,722,030 ( 0.18%)  4 ( 0.25%)  4 ( 0.26%)     1,220,406 ( 0.06%)          3 ( 0.00%)     3 ( 0.10%)  3,857,411 ( 2.05%)       2 ( 0.00%)      0             406,802 ( 0.21%)         7 ( 0.00%)         0            0           ./stdio-common/./stdio-common/printf.c:printf
    7,290,024 ( 0.17%)  2 ( 0.13%)  2 ( 0.13%)     1,822,508 ( 0.10%)          0              0                   0                0               0           1,215,008 ( 0.64%)         8 ( 0.00%)         0            0           ./stdlib/./stdlib/cmp.c:__mpn_cmp
    7,290,000 ( 0.17%)  3 ( 0.19%)  3 ( 0.19%)     1,215,000 ( 0.06%)          0              0             810,000 ( 0.43%)       0               0           1,620,000 ( 0.85%)        14 ( 0.00%)         0            0           ./stdlib/../sysdeps/x86_64/rshift.S:__mpn_rshift
    6,489,936 ( 0.15%)  3 ( 0.19%)  3 ( 0.19%)     3,246,312 ( 0.17%)          2 ( 0.00%)     1 ( 0.03%)    810,908 ( 0.43%)  51,302 (28.99%)      2 ( 0.00%)    406,802 ( 0.21%)       915 ( 0.03%)         0            0           /home/neg/Documents/dev/ed_ufmg/pratica04/src/mat.c:inicializaMatrizAleatoria
    6,075,000 ( 0.14%)  2 ( 0.13%)  2 ( 0.13%)     2,025,000 ( 0.11%)          2 ( 0.00%)     2 ( 0.07%)    810,000 ( 0.43%)       0               0             405,000 ( 0.21%)         0                  0            0           ./stdlib/./stdlib/drand48.c:drand48
    5,079,619 ( 0.12%)  1 ( 0.06%)  1 ( 0.06%)     1,016,104 ( 0.05%)          0              0             813,604 ( 0.43%)       0               0             405,901 ( 0.21%)         2 ( 0.00%)         0            0           ./stdio-common/./stdio-common/printf-parse.h:__vfprintf_internal
    4,455,000 ( 0.10%)  2 ( 0.13%)  2 ( 0.13%)       202,500 ( 0.01%)          0              0             810,000 ( 0.43%)       0               0             202,500 ( 0.11%)         2 ( 0.00%)         0            0           ./stdlib/../sysdeps/ieee754/dbl-64/dbl2mpn.c:__mpn_extract_double

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/neg/Documents/dev/ed_ufmg/pratica04/src/mat.c
--------------------------------------------------------------------------------
Ir                     I1mr       ILmr       Dr                     D1mr                DLmr       Dw                  D1mw             DLmw            Bc                  Bcm              Bi         Bim        

-- line 17 ----------------------------------------
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           #define INITRANDOMRANGE 10
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Macro que realiza swap sem variavel auxiliar
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           #define ELEMSWAP(x,y) (x+=y,y=x-y,x-=y)
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           void criaMatriz(mat_tipo * mat, int tx, int ty, int id)
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Descricao: cria matriz com dimensoes tx X ty
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Entrada: mat, tx, ty, id
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Saida: mat
           32 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             0                   0          0                  20 ( 0.00%)       0               0                   0                0          0          0           {
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // verifica se os valores de tx e ty são validos
            8 ( 0.00%) 0          0                      4 ( 0.00%)          0          0                   0                0               0                   4 ( 0.00%)       4 ( 0.00%) 0          0             erroAssert(tx>0,"Dimensao nula");
            8 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             4 ( 0.00%)          0          0                   0                0               0                   4 ( 0.00%)       4 ( 0.00%) 0          0             erroAssert(ty>0,"Dimensao nula");
            8 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             4 ( 0.00%)          0          0                   0                0               0                   4 ( 0.00%)       4 ( 0.00%) 0          0             erroAssert(tx<=MAXTAM,"Dimensao maior que permitido");
            8 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             4 ( 0.00%)          0          0                   0                0               0                   4 ( 0.00%)       4 ( 0.00%) 0          0             erroAssert(ty<=MAXTAM,"Dimensao maior que permitido");
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // inicializa as dimensoes da matriz
           12 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             8 ( 0.00%)          0          0                   4 ( 0.00%)       3 ( 0.00%)      2 ( 0.00%)          0                0          0          0             mat->tamx = tx;
           12 ( 0.00%) 0          0                      8 ( 0.00%)          0          0                   4 ( 0.00%)       0               0                   0                0          0          0             mat->tamy = ty;
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // inicializa o identificador da matriz, para rastreamento
           12 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             8 ( 0.00%)          0          0                   4 ( 0.00%)       0               0                   0                0          0          0             mat->id = id;
           12 ( 0.00%) 0          0                      8 ( 0.00%)          0          0                   0                0               0                   0                0          0          0           }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           void inicializaMatrizNula(mat_tipo * mat)
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Descricao: inicializa mat com valores nulos 
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Entrada: mat
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Saida: mat
           16 ( 0.00%) 0          0                      0                   0          0                   8 ( 0.00%)       0               0                   0                0          0          0           {
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             int i, j;
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // inicializa todos os elementos da matriz com 0, por seguranca 
        6,016 ( 0.00%) 0          0                  4,004 ( 0.00%)          0          0                   4 ( 0.00%)       0               0               2,004 ( 0.00%)       9 ( 0.00%) 0          0             for (i=0; i<MAXTAM; i++){
    3,008,000 ( 0.07%) 0          0              2,002,000 ( 0.11%)          0          0               2,000 ( 0.00%)       0               0           1,002,000 ( 0.53%)   2,015 ( 0.06%) 0          0               for(j=0; j<MAXTAM; j++){
    9,000,000 ( 0.21%) 0          0              3,000,000 ( 0.16%)          0          0           1,000,000 ( 0.53%) 124,994 (70.62%) 92,185 (99.31%)          0                0          0          0                 mat->m[i][j] = 0;
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .               }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             }
           16 ( 0.00%) 0          0                      8 ( 0.00%)          0          0                   0                0               0                   0                0          0          0           }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           void inicializaMatrizAleatoria(mat_tipo * mat)
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Descricao: inicializa mat com valores aleatorios
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Entrada: mat 
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Saida: mat
           10 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             0                   0          0                   4 ( 0.00%)       0               0                   0                0          0          0           {
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             int i, j;
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // inicializa a matriz com valores nulos, por seguranca
            6 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             2 ( 0.00%)          0          0                   2 ( 0.00%)       0               0                   0                0          0          0             inicializaMatrizNula(mat);
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // inicializa a parte alocada da matriz com valores aleatorios
        4,512 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)         3,606 ( 0.00%)          0          0                   2 ( 0.00%)       2 ( 0.00%)      0                 902 ( 0.00%)       6 ( 0.00%) 0          0             for (i=0; i<mat->tamx; i++){
    2,030,400 ( 0.05%) 0          0              1,622,700 ( 0.09%)          0          0                 900 ( 0.00%)       0               0             405,900 ( 0.21%)     909 ( 0.03%) 0          0               for(j=0; j<mat->tamy; j++){
    4,455,000 ( 0.10%) 0          0              1,620,000 ( 0.09%)          2 ( 0.00%) 1 ( 0.03%)    810,000 ( 0.43%)  51,300 (28.98%)      2 ( 0.00%)          0                0          0          0                 mat->m[i][j] = drand48()*INITRANDOMRANGE;
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .               }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             }
            8 ( 0.00%) 0          0                      4 ( 0.00%)          0          0                   0                0               0                   0                0          0          0           }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           double acessaMatriz(mat_tipo * mat)
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Descricao: acessa mat para fins de registro de acesso 
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Entrada: mat 
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Saida: mat
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           {
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             int i, j;
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             double aux, s=0.0;
-- line 75 ----------------------------------------
-- line 81 ----------------------------------------
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             return s; // apenas para evitar que acesso seja eliminado
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           void imprimeMatriz(mat_tipo * mat)
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Descricao: imprime a matriz com a identificacao de linhas e colunas
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Entrada: mat
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Saida: impressao na saida padrao (stdout) 
            5 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             0                   0          0                   2 ( 0.00%)       0               0                   0                0          0          0           {
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             int i,j;
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // seguranca, mas erro não deve acontecer jamais
            4 ( 0.00%) 0          0                      2 ( 0.00%)          0          0                   0                0               0                   1 ( 0.00%)       1 ( 0.00%) 0          0             erroAssert(mat->tamx<=MAXTAM,"Dimensao maior que permitido");
            4 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             2 ( 0.00%)          0          0                   0                0               0                   1 ( 0.00%)       1 ( 0.00%) 0          0             erroAssert(mat->tamy<=MAXTAM,"Dimensao maior que permitido");
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // imprime os identificadores de coluna
            6 ( 0.00%) 2 ( 0.13%) 2 ( 0.13%)             0                   0          0                   1 ( 0.00%)       0               0                   0                0          0          0             printf("%9s"," ");
        2,256 ( 0.00%) 0          0                  1,803 ( 0.00%)          0          0                   1 ( 0.00%)       0               0                 451 ( 0.00%)       2 ( 0.00%) 0          0             for(j=0; j<mat->tamy; j++)
        2,700 ( 0.00%) 0          0                    450 ( 0.00%)          0          0                 450 ( 0.00%)       0               0                   0                0          0          0               printf("%8d ",j);
            2 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             0                   0          0                   1 ( 0.00%)       0               0                   0                0          0          0             printf("\n");
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // imprime as linhas
        2,256 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)         1,803 ( 0.00%)          0          0                   1 ( 0.00%)       0               0                 451 ( 0.00%)       3 ( 0.00%) 0          0             for (i=0; i<mat->tamx; i++){
        2,700 ( 0.00%) 0          0                    450 ( 0.00%)          0          0                 450 ( 0.00%)       0               0                   0                0          0          0               printf("%8d ",i);
    1,015,200 ( 0.02%) 1 ( 0.06%) 1 ( 0.06%)       811,350 ( 0.04%)          0          0                 450 ( 0.00%)       0               0             202,950 ( 0.11%)     452 ( 0.01%) 0          0               for(j=0; j<mat->tamy; j++){
    2,632,500 ( 0.06%) 0          0                810,000 ( 0.04%)     25,650 ( 0.08%) 0             202,500 ( 0.11%)       0               0                   0                0          0          0                 printf("%8.2f ",mat->m[i][j]);
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .               }
          900 ( 0.00%) 0          0                      0                   0          0                 450 ( 0.00%)       0               0                   0                0          0          0               printf("\n");
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             }
            4 ( 0.00%) 0          0                      2 ( 0.00%)          0          0                   0                0               0                   0                0          0          0           }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           void salvaMatriz(mat_tipo * mat, FILE * out)
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Descricao: salva a matriz em arquivo
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Entrada: mat
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Saida: out
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           {
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             int i,j;
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
-- line 118 ----------------------------------------
-- line 194 ----------------------------------------
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .               }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           void multiplicaMatrizes(mat_tipo *a, mat_tipo *b, mat_tipo *c)
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Descricao: multiplica as matrizes a e b e armazena o resultado em c
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Entrada: a,b
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Saida: c
            7 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             0                   0          0                   4 ( 0.00%)       1 ( 0.00%)      0                   0                0          0          0           {
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             int i,j,k;
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // verifica a compatibilidade das dimensoes 
            6 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             4 ( 0.00%)          2 ( 0.00%) 0                   0                0               0                   1 ( 0.00%)       1 ( 0.00%) 0          0             erroAssert(a->tamy==b->tamx,"Dimensoes incompativeis");
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // cria e inicializa a matriz c
            9 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             7 ( 0.00%)          0          0                   1 ( 0.00%)       0               0                   0                0          0          0             criaMatriz(c,a->tamx, b->tamy,c->id);
            3 ( 0.00%) 0          0                      1 ( 0.00%)          0          0                   1 ( 0.00%)       0               0                   0                0          0          0             inicializaMatrizNula(c);
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // realiza a multiplicacao de matrizes
        2,256 ( 0.00%) 2 ( 0.13%) 2 ( 0.13%)         1,803 ( 0.00%)          0          0                   1 ( 0.00%)       1 ( 0.00%)      0                 451 ( 0.00%)       3 ( 0.00%) 0          0             for (i=0; i<c->tamx;i++){
    1,015,200 ( 0.02%) 1 ( 0.06%) 1 ( 0.06%)       811,350 ( 0.04%)    153,564 ( 0.50%) 0                 450 ( 0.00%)       0               0             202,950 ( 0.11%)     454 ( 0.01%) 0          0               for (j=0; j<c->tamy;j++){
  456,840,000 (10.73%) 0          0            365,107,500 (19.19%)          1 ( 0.00%) 0             202,500 ( 0.11%)       0               0          91,327,500 (47.97%) 202,521 ( 6.39%) 0          0                 for (k=0; k<a->tamy;k++){
3,098,250,000 (72.78%) 1 ( 0.06%) 1 ( 0.06%) 1,366,875,000 (71.85%) 30,396,322 (99.40%) 2 ( 0.07%) 91,125,000 (48.31%)       0               0                   0                0          0          0                   c->m[i][j] += a->m[i][k]*b->m[k][j];
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .                 }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .               }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             }
            4 ( 0.00%) 0          0                      2 ( 0.00%)          0          0                   0                0               0                   0                0          0          0           }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           void transpoeMatriz(mat_tipo *a)
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Descricao: transpoe a matriz a
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Entrada: a
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Saida: a
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           {
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             int i,j,dim;
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             
-- line 227 ----------------------------------------
-- line 237 ----------------------------------------
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // inverte as dimensoes da matriz transposta
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             ELEMSWAP(a->tamx,a->tamy);
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           }
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           void destroiMatriz(mat_tipo *a)
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Descricao: destroi a matriz a, que se torna inacessível
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Entrada: a
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           // Saida: a
           15 ( 0.00%) 1 ( 0.06%) 1 ( 0.06%)             0                   0          0                   6 ( 0.00%)       0               0                   0                0          0          0           {
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // apenas um aviso se a matriz for destruida mais de uma vez
           24 ( 0.00%) 0          0                     12 ( 0.00%)          2 ( 0.00%) 0                   0                0               0                   6 ( 0.00%)       3 ( 0.00%) 0          0             avisoAssert(((a->tamx>0)&&(a->tamy>0)),"Matriz já foi destruida");
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .           
            .          .          .                      .                   .          .                   .                .               .                   .                .          .          .             // torna as dimensoes invalidas
           30 ( 0.00%) 2 ( 0.13%) 2 ( 0.13%)            21 ( 0.00%)          0          0                   9 ( 0.00%)       0               0                   0                0          0          0             a->id = a->tamx = a->tamy = -1;
            9 ( 0.00%) 0          0                      6 ( 0.00%)          0          0                   0                0               0                   0                0          0          0           }

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./libio/./libio/fileops.c
  ./libio/./libio/genops.c
  ./libio/./libio/libioP.h
  ./stdio-common/./stdio-common/printf-parse.h
  ./stdio-common/./stdio-common/printf.c
  ./stdio-common/./stdio-common/printf_fp.c
  ./stdio-common/./stdio-common/vfprintf-internal.c
  ./stdlib/../sysdeps/ieee754/dbl-64/dbl2mpn.c
  ./stdlib/../sysdeps/x86_64/mul_1.S
  ./stdlib/../sysdeps/x86_64/rshift.S
  ./stdlib/./stdlib/cmp.c
  ./stdlib/./stdlib/divrem.c
  ./stdlib/./stdlib/drand48-iter.c
  ./stdlib/./stdlib/drand48.c
  ./stdlib/./stdlib/erand48_r.c
  ./stdlib/./stdlib/mul.c
  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/strchr-avx2.S

--------------------------------------------------------------------------------
Ir                     I1mr        ILmr        Dr                     D1mr                DLmr       Dw                  D1mw             DLmw            Bc                  Bcm              Bi         Bim        
--------------------------------------------------------------------------------
3,578,270,196 (84.06%) 26 ( 1.65%) 26 ( 1.68%) 1,742,673,940 (91.60%) 30,575,543 (99.99%) 3 ( 0.10%) 93,345,230 (49.49%) 176,301 (99.61%) 92,189 (99.31%) 93,145,584 (48.93%) 206,396 ( 6.51%) 0          0           events annotated

