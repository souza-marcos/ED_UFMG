--------------------------------------------------------------------------------
Profile data file 'callgrind.out.295175' (creator: callgrind-3.18.1)
--------------------------------------------------------------------------------
I1 cache: 32768 B, 64 B, 8-way associative
D1 cache: 32768 B, 64 B, 8-way associative
LL cache: 8388608 B, 64 B, direct-mapped
Timerange: Basic block 0 - 233818689
Trigger: Program termination
Profiled target:  ./bin/matop -m -x 450 -y 450 (PID 295175, part 1)
Events recorded:  Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
Events shown:     Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
Event sort order: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
Thresholds:       99 0 0 0 0 0 0 0 0 0 0 0 0
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                     Dr                     Dw                   I1mr           D1mr                D1mw             ILmr           DLmr           DLmw            Bc                   Bcm                Bi                 Bim            
--------------------------------------------------------------------------------
4,255,041,783 (100.0%) 1,807,441,014 (100.0%) 283,579,782 (100.0%) 1,571 (100.0%) 30,577,351 (100.0%) 178,476 (100.0%) 1,541 (100.0%) 1,476 (100.0%) 94,302 (100.0%) 192,660,440 (100.0%) 3,174,563 (100.0%) 4,674,238 (100.0%) 1,083 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                     Dr                     Dw                   I1mr        D1mr                D1mw             ILmr        DLmr         DLmw            Bc                  Bcm                Bi                 Bim           file:function
--------------------------------------------------------------------------------
3,556,107,485 (83.57%) 1,641,467,717 (90.82%) 182,655,907 (64.41%)  7 ( 0.45%) 30,549,889 (99.91%)       2 ( 0.00%)  7 ( 0.45%)   2 ( 0.14%)      0          91,530,902 (47.51%)   202,979 ( 6.39%)         .            .           src/mat.c:multiplicaMatrizes [/home/neg/Documents/dev/ed_ufmg/pratica04/bin/matop]
  196,802,432 ( 4.63%)    39,100,402 ( 2.16%)  21,779,006 ( 7.68%) 79 ( 5.03%)          9 ( 0.00%)       0          79 ( 5.13%)   8 ( 0.54%)      0          33,524,520 (17.40%) 1,597,090 (50.31%)         .            .           ./stdio-common/./stdio-common/printf_fp.c:__printf_fp_l [/usr/lib/x86_64-linux-gnu/libc.so.6]
   82,211,722 ( 1.93%)    28,351,360 ( 1.57%)  12,160,900 ( 4.29%)  4 ( 0.25%)          0                0           4 ( 0.26%)   0               0           9,714,276 ( 5.04%)   473,422 (14.91%)         .            .           ./stdio-common/./stdio-common/printf_fp.c:hack_digit [/usr/lib/x86_64-linux-gnu/libc.so.6]
   69,413,953 ( 1.63%)    18,300,640 ( 1.01%)  17,626,001 ( 6.22%)  5 ( 0.32%)          0                0           5 ( 0.32%)   0               0           7,531,274 ( 3.91%)   536,306 (16.89%)         .            .           ./stdlib/./stdlib/divrem.c:__mpn_divrem [/usr/lib/x86_64-linux-gnu/libc.so.6]
   61,883,368 ( 1.45%)    13,640,455 ( 0.75%)  11,189,751 ( 3.95%) 67 ( 4.26%)         14 ( 0.00%)       7 ( 0.00%) 67 ( 4.35%)  14 ( 0.95%)      7 ( 0.01%)  8,969,443 ( 4.66%)     1,186 ( 0.04%) 1,017,005 (21.76%) 907 (83.75%)  ./stdio-common/./stdio-common/vfprintf-internal.c:__vfprintf_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
   55,080,152 ( 1.29%)    14,579,229 ( 0.81%)   8,099,378 ( 2.86%)  7 ( 0.45%)          0                0           7 ( 0.45%)   0               0          12,959,259 ( 6.73%)     1,817 ( 0.06%)         .            .           ./libio/./libio/fileops.c:_IO_file_overflow@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
   47,333,484 ( 1.11%)     6,473,322 ( 0.36%)   4,450,230 ( 1.57%)  6 ( 0.38%)          0                0           6 ( 0.39%)   0               0           7,688,322 ( 3.99%)         3 ( 0.00%)         .            .           ./stdlib/../sysdeps/x86_64/mul_1.S:__mpn_mul_1 [/usr/lib/x86_64-linux-gnu/libc.so.6]
   17,814,467 ( 0.42%)     6,477,988 ( 0.36%)   1,619,497 ( 0.57%)  2 ( 0.13%)          0                0           2 ( 0.13%)   0               0           1,619,497 ( 0.84%)         8 ( 0.00%) 1,619,497 (34.65%)   1 ( 0.09%)  ./libio/./libio/genops.c:__overflow [/usr/lib/x86_64-linux-gnu/libc.so.6]
   16,969,932 ( 0.40%)     4,848,552 ( 0.27%)   4,444,506 ( 1.57%)  5 ( 0.32%)          0                0           5 ( 0.32%)   0               0           2,020,230 ( 1.05%)         9 ( 0.00%)         .            .           ./stdlib/./stdlib/mul.c:__mpn_mul [/usr/lib/x86_64-linux-gnu/libc.so.6]
   15,021,328 ( 0.35%)     3,696,934 ( 0.20%)   2,869,664 ( 1.01%)  5 ( 0.32%)          0                2 ( 0.00%)  5 ( 0.32%)   0               2 ( 0.00%)  1,657,283 ( 0.86%)     3,721 ( 0.12%)         4 ( 0.00%)   1 ( 0.09%)  ./libio/./libio/fileops.c:_IO_file_xsputn@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
   12,555,000 ( 0.30%)     2,835,000 ( 0.16%)   1,620,000 ( 0.57%)  2 ( 0.13%)          2 ( 0.00%)       2 ( 0.00%)  2 ( 0.13%)   1 ( 0.07%)      0             405,000 ( 0.21%)         .                  .            .           ./stdlib/./stdlib/erand48_r.c:erand48_r [/usr/lib/x86_64-linux-gnu/libc.so.6]
   12,014,048 ( 0.28%)     4,004,012 ( 0.22%)   2,004,012 ( 0.71%)  0                   0          124,994 (70.03%)  0            0          92,185 (97.76%)  1,004,004 ( 0.52%)     2,025 ( 0.06%)         .            .           src/mat.c:inicializaMatrizNula [/home/neg/Documents/dev/ed_ufmg/pratica04/bin/matop]
   11,336,479 ( 0.27%)             0                    0           0                   0                0           0            0               0           1,619,497 ( 0.84%)         .                  .            .           ./libio/./libio/libioP.h:__overflow
    8,100,003 ( 0.19%)     2,834,998 ( 0.16%)     810,002 ( 0.29%)  2 ( 0.13%)          2 ( 0.00%)       0           2 ( 0.13%)   2 ( 0.14%)      0             405,000 ( 0.21%)         1 ( 0.00%)         .            .           ./stdlib/./stdlib/drand48-iter.c:__drand48_iterate [/usr/lib/x86_64-linux-gnu/libc.so.6]
    7,729,238 ( 0.18%)       813,604 ( 0.05%)           0           2 ( 0.13%)          1 ( 0.00%)       0           2 ( 0.13%)   1 ( 0.07%)      0             813,604 ( 0.42%)       450 ( 0.01%)         .            .           ./string/../sysdeps/x86_64/multiarch/strchr-avx2.S:__strchrnul_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    7,722,030 ( 0.18%)     1,220,406 ( 0.07%)   3,857,411 ( 1.36%)  4 ( 0.25%)          3 ( 0.00%)       2 ( 0.00%)  4 ( 0.26%)   3 ( 0.20%)      0             406,802 ( 0.21%)         7 ( 0.00%)         .            .           ./stdio-common/./stdio-common/printf.c:printf [/usr/lib/x86_64-linux-gnu/libc.so.6]
    7,356,633 ( 0.17%)       819,087 ( 0.05%)     410,433 ( 0.14%)  3 ( 0.19%)          0               15 ( 0.01%)  3 ( 0.19%)   0              15 ( 0.02%)  2,450,126 ( 1.27%)     2,768 ( 0.09%)         .            .           ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__mempcpy_avx_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
    7,290,024 ( 0.17%)     1,822,508 ( 0.10%)           0           2 ( 0.13%)          0                0           2 ( 0.13%)   0               0           1,215,008 ( 0.63%)         8 ( 0.00%)         .            .           ./stdlib/./stdlib/cmp.c:__mpn_cmp [/usr/lib/x86_64-linux-gnu/libc.so.6]
    7,290,000 ( 0.17%)     1,215,000 ( 0.07%)     810,000 ( 0.29%)  3 ( 0.19%)          0                0           3 ( 0.19%)   0               0           1,620,000 ( 0.84%)        14 ( 0.00%)         .            .           ./stdlib/../sysdeps/x86_64/rshift.S:__mpn_rshift [/usr/lib/x86_64-linux-gnu/libc.so.6]
    6,489,936 ( 0.15%)     2,840,412 ( 0.16%)   1,216,808 ( 0.43%)  3 ( 0.19%)          2 ( 0.00%)  51,302 (28.74%)  3 ( 0.19%)   1 ( 0.07%)      2 ( 0.00%)    406,802 ( 0.21%)       915 ( 0.03%)         .            .           src/mat.c:inicializaMatrizAleatoria [/home/neg/Documents/dev/ed_ufmg/pratica04/bin/matop]
    6,075,000 ( 0.14%)     2,025,000 ( 0.11%)     810,000 ( 0.29%)  2 ( 0.13%)          2 ( 0.00%)       0           2 ( 0.13%)   2 ( 0.14%)      0             405,000 ( 0.21%)         .                  .            .           ./stdlib/./stdlib/drand48.c:drand48 [/usr/lib/x86_64-linux-gnu/libc.so.6]

--------------------------------------------------------------------------------
-- Auto-annotated source: src/mat.c
--------------------------------------------------------------------------------
Ir                     Dr                     Dw                  I1mr       D1mr                D1mw             ILmr       DLmr       DLmw            Bc                  Bcm              Bi Bim 

-- line 17 ----------------------------------------
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           #define INITRANDOMRANGE 10
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Macro que realiza swap sem variavel auxiliar
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           #define ELEMSWAP(x,y) (x+=y,y=x-y,x-=y)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           void criaMatriz(mat_tipo * mat, int tx, int ty, int id)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Descricao: cria matriz com dimensoes tx X ty
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Entrada: mat, tx, ty, id
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Saida: mat
           32 ( 0.00%)             0                  20 ( 0.00%) 1 ( 0.06%)          0                0          1 ( 0.06%) .               .                   .                .          .          .           {
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // verifica se os valores de tx e ty são validos
            8 ( 0.00%)             4 ( 0.00%)          0          0                   0                0          0          0               0                   4 ( 0.00%)       2 ( 0.00%) .          .             erroAssert(tx>0,"Dimensao nula");
            8 ( 0.00%)             4 ( 0.00%)          0          1 ( 0.06%)          0                0          1 ( 0.06%) 0               0                   4 ( 0.00%)       4 ( 0.00%) .          .             erroAssert(ty>0,"Dimensao nula");
            8 ( 0.00%)             4 ( 0.00%)          0          1 ( 0.06%)          0                0          1 ( 0.06%) 0               0                   4 ( 0.00%)       4 ( 0.00%) .          .             erroAssert(tx<=MAXTAM,"Dimensao maior que permitido");
            8 ( 0.00%)             4 ( 0.00%)          0          1 ( 0.06%)          0                0          1 ( 0.06%) 0               0                   4 ( 0.00%)       4 ( 0.00%) .          .             erroAssert(ty<=MAXTAM,"Dimensao maior que permitido");
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // inicializa as dimensoes da matriz
           12 ( 0.00%)             8 ( 0.00%)          4 ( 0.00%) 1 ( 0.06%)          0                3 ( 0.00%) 1 ( 0.06%) 0               2 ( 0.00%)          .                .          .          .             mat->tamx = tx;
           12 ( 0.00%)             8 ( 0.00%)          4 ( 0.00%) .                   .                .          .          .               .                   .                .          .          .             mat->tamy = ty;
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // inicializa o identificador da matriz, para rastreamento
           12 ( 0.00%)             8 ( 0.00%)          4 ( 0.00%) 1 ( 0.06%)          0                0          1 ( 0.06%) .               .                   .                .          .          .             mat->id = id;
           12 ( 0.00%)             8 ( 0.00%)          .          .                   .                .          .          .               .                   .                .          .          .           }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           void inicializaMatrizNula(mat_tipo * mat)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Descricao: inicializa mat com valores nulos 
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Entrada: mat
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Saida: mat
           16 ( 0.00%)             0                   8 ( 0.00%) .                   .                .          .          .               .                   .                .          .          .           {
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             int i, j;
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // inicializa todos os elementos da matriz com 0, por seguranca 
        6,016 ( 0.00%)         2,004 ( 0.00%)      2,004 ( 0.00%) 0                   0                0          0          0               0               2,004 ( 0.00%)       9 ( 0.00%) .          .             for (i=0; i<MAXTAM; i++){
    3,008,000 ( 0.07%)     1,002,000 ( 0.06%)  1,002,000 ( 0.35%) 0                   0                0          0          0               0           1,002,000 ( 0.52%)   2,016 ( 0.06%) .          .               for(j=0; j<MAXTAM; j++){
    9,000,000 ( 0.21%)     3,000,000 ( 0.17%)  1,000,000 ( 0.35%) 0                   0          124,994 (70.03%) 0          0          92,185 (97.76%)          .                .          .          .                 mat->m[i][j] = 0;
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .               }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             }
           16 ( 0.00%)             8 ( 0.00%)          .          .                   .                .          .          .               .                   .                .          .          .           }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           void inicializaMatrizAleatoria(mat_tipo * mat)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Descricao: inicializa mat com valores aleatorios
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Entrada: mat 
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Saida: mat
           10 ( 0.00%)             0                   4 ( 0.00%) 1 ( 0.06%)          0                0          1 ( 0.06%) .               .                   .                .          .          .           {
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             int i, j;
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // inicializa a matriz com valores nulos, por seguranca
            6 ( 0.00%)             2 ( 0.00%)          2 ( 0.00%) 1 ( 0.06%)          0                0          1 ( 0.06%) .               .                   .                .          .          .             inicializaMatrizNula(mat);
    6,007,024 ( 0.14%)     2,002,006 ( 0.11%)  1,002,006 ( 0.35%) 0                   0           62,494 (35.02%) 0          0          61,523 (65.24%)    502,002 ( 0.26%)   1,021 ( 0.03%) .          .           => src/mat.c:inicializaMatrizNula (2x)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // inicializa a parte alocada da matriz com valores aleatorios
        4,512 ( 0.00%)         2,706 ( 0.00%)        902 ( 0.00%) 1 ( 0.06%)          0                2 ( 0.00%) 1 ( 0.06%) 0               0                 902 ( 0.00%)       6 ( 0.00%) .          .             for (i=0; i<mat->tamx; i++){
    2,030,400 ( 0.05%)     1,217,700 ( 0.07%)    405,900 ( 0.14%) 0                   0                0          0          0               0             405,900 ( 0.21%)     909 ( 0.03%) .          .               for(j=0; j<mat->tamy; j++){
    4,455,000 ( 0.10%)     1,620,000 ( 0.09%)    810,000 ( 0.29%) 0                   2 ( 0.00%)  51,300 (28.74%) 0          1 ( 0.07%)      2 ( 0.00%)          .                .          .          .                 mat->m[i][j] = drand48()*INITRANDOMRANGE;
   27,540,003 ( 0.65%)     8,099,998 ( 0.45%)  3,240,002 ( 1.14%) 6 ( 0.38%)          8 ( 0.00%)       2 ( 0.00%) 6 ( 0.39%) 5 ( 0.34%)      0           1,215,000 ( 0.63%)       1 ( 0.00%) 405,000 ( 8.66%) 1 ( 0.09%)  => ???:0x00000000001091f0 (405,000x)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .               }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             }
            8 ( 0.00%)             4 ( 0.00%)          .          .                   .                .          .          .               .                   .                .          .          .           }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           double acessaMatriz(mat_tipo * mat)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Descricao: acessa mat para fins de registro de acesso 
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Entrada: mat 
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Saida: mat
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           {
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             int i, j;
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             double aux, s=0.0;
-- line 75 ----------------------------------------
-- line 81 ----------------------------------------
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             return s; // apenas para evitar que acesso seja eliminado
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           void imprimeMatriz(mat_tipo * mat)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Descricao: imprime a matriz com a identificacao de linhas e colunas
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Entrada: mat
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Saida: impressao na saida padrao (stdout) 
            5 ( 0.00%)             0                   2 ( 0.00%) 1 ( 0.06%)          0                0          1 ( 0.06%) .               .                   .                .          .          .           {
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             int i,j;
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // seguranca, mas erro não deve acontecer jamais
            4 ( 0.00%)             2 ( 0.00%)          0          0                   0                0          0          0               0                   1 ( 0.00%)       1 ( 0.00%) .          .             erroAssert(mat->tamx<=MAXTAM,"Dimensao maior que permitido");
            4 ( 0.00%)             2 ( 0.00%)          0          1 ( 0.06%)          0                0          1 ( 0.06%) 0               0                   1 ( 0.00%)       1 ( 0.00%) .          .             erroAssert(mat->tamy<=MAXTAM,"Dimensao maior que permitido");
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // imprime os identificadores de coluna
            6 ( 0.00%)             0                   1 ( 0.00%) 2 ( 0.13%)          0                0          2 ( 0.13%) .               .                   .                .          .          .             printf("%9s"," ");
        3,115 ( 0.00%)           497 ( 0.00%)        528 ( 0.00%) 158 (10.06%)         57 ( 0.00%)      69 ( 0.04%) 158 (10.25%) 43 ( 2.91%)     67 ( 0.07%)        557 ( 0.00%)     116 ( 0.00%) 35 ( 0.00%) 14 ( 1.29%)  => ???:0x0000000000109170 (1x)
        2,256 ( 0.00%)         1,353 ( 0.00%)        451 ( 0.00%) 0                   0                0          0          0               0                 451 ( 0.00%)       3 ( 0.00%) .          .             for(j=0; j<mat->tamy; j++)
        2,700 ( 0.00%)           450 ( 0.00%)        450 ( 0.00%) .                   .                .          .          .               .                   .                .          .          .               printf("%8d ",j);
      386,709 ( 0.01%)        81,081 ( 0.00%)     56,693 ( 0.02%) 37 ( 2.36%)          1 ( 0.00%)      16 ( 0.01%) 37 ( 2.40%) 1 ( 0.07%)     16 ( 0.02%)     61,213 ( 0.03%)   2,578 ( 0.08%) 5,411 ( 0.12%) 3 ( 0.28%)  => ???:0x0000000000109170 (450x)
            2 ( 0.00%)             0                   1 ( 0.00%) 1 ( 0.06%)          0                0          1 ( 0.06%) .               .                   .                .          .          .             printf("\n");
          216 ( 0.00%)            61 ( 0.00%)         34 ( 0.00%) 8 ( 0.51%)          1 ( 0.00%)       1 ( 0.00%) 8 ( 0.52%) 0               0                  34 ( 0.00%)       7 ( 0.00%) 3 ( 0.00%) 2 ( 0.18%)  => ???:0x0000000000109120 (1x)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // imprime as linhas
        2,256 ( 0.00%)         1,353 ( 0.00%)        451 ( 0.00%) 1 ( 0.06%)          0                0          1 ( 0.06%) 0               0                 451 ( 0.00%)       3 ( 0.00%) .          .             for (i=0; i<mat->tamx; i++){
        2,700 ( 0.00%)           450 ( 0.00%)        450 ( 0.00%) .                   .                .          .          .               .                   .                .          .          .               printf("%8d ",i);
      385,883 ( 0.01%)        80,877 ( 0.00%)     56,580 ( 0.02%) 0                   0                0          0          0               0              61,087 ( 0.03%)   5,553 ( 0.17%) 5,400 ( 0.12%) 449 (41.46%)  => ???:0x0000000000109170 (450x)
    1,015,200 ( 0.02%)       608,850 ( 0.03%)    202,950 ( 0.07%) 1 ( 0.06%)          0                0          1 ( 0.06%) 0               0             202,950 ( 0.11%)     452 ( 0.01%) .          .               for(j=0; j<mat->tamy; j++){
    2,632,500 ( 0.06%)       810,000 ( 0.04%)    202,500 ( 0.07%) 0              25,650 ( 0.08%)       .          .          .               .                   .                .          .          .                 printf("%8.2f ",mat->m[i][j]);
  648,185,819 (15.23%)   149,377,118 ( 8.26%) 93,910,403 (33.12%) 123 ( 7.83%)         15 ( 0.00%)       0          123 ( 7.98%) 14 ( 0.95%)      0          98,127,699 (50.93%) 2,956,048 (93.12%) 4,256,712 (91.07%) 452 (41.74%)  => ???:0x0000000000109170 (202,500x)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .               }
          900 ( 0.00%)             0                 450 ( 0.00%) .                   .                .          .          .               .                   .                .          .          .               printf("\n");
       97,200 ( 0.00%)        27,450 ( 0.00%)     15,300 ( 0.01%) 0                   0                0          0          0               0              15,300 ( 0.01%)     454 ( 0.01%) 1,350 ( 0.03%) .           => ???:0x0000000000109120 (450x)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             }
            4 ( 0.00%)             2 ( 0.00%)          .          .                   .                .          .          .               .                   .                .          .          .           }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           void salvaMatriz(mat_tipo * mat, FILE * out)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Descricao: salva a matriz em arquivo
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Entrada: mat
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Saida: out
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           {
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             int i,j;
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
-- line 118 ----------------------------------------
-- line 194 ----------------------------------------
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .               }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           void multiplicaMatrizes(mat_tipo *a, mat_tipo *b, mat_tipo *c)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Descricao: multiplica as matrizes a e b e armazena o resultado em c
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Entrada: a,b
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Saida: c
            7 ( 0.00%)             0                   4 ( 0.00%) 1 ( 0.06%)          0                1 ( 0.00%) 1 ( 0.06%) .               .                   .                .          .          .           {
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             int i,j,k;
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // verifica a compatibilidade das dimensoes 
            6 ( 0.00%)             4 ( 0.00%)          0          1 ( 0.06%)          2 ( 0.00%)       0          1 ( 0.06%) 0               0                   1 ( 0.00%)       1 ( 0.00%) .          .             erroAssert(a->tamy==b->tamx,"Dimensoes incompativeis");
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // cria e inicializa a matriz c
            9 ( 0.00%)             7 ( 0.00%)          1 ( 0.00%) 1 ( 0.06%)          0                0          1 ( 0.06%) .               .                   .                .          .          .             criaMatriz(c,a->tamx, b->tamy,c->id);
           28 ( 0.00%)            12 ( 0.00%)          8 ( 0.00%) 0                   0                0          0          0               0                   4 ( 0.00%)       4 ( 0.00%) .          .           => src/mat.c:criaMatriz (1x)
            3 ( 0.00%)             1 ( 0.00%)          1 ( 0.00%) .                   .                .          .          .               .                   .                .          .          .             inicializaMatrizNula(c);
    3,003,512 ( 0.07%)     1,001,003 ( 0.06%)    501,003 ( 0.18%) 0                   0           31,250 (17.51%) 0          0               0             251,001 ( 0.13%)     501 ( 0.02%) .          .           => src/mat.c:inicializaMatrizNula (1x)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // realiza a multiplicacao de matrizes
        2,256 ( 0.00%)         1,353 ( 0.00%)        451 ( 0.00%) 2 ( 0.13%)          0                1 ( 0.00%) 2 ( 0.13%) 0               0                 451 ( 0.00%)       3 ( 0.00%) .          .             for (i=0; i<c->tamx;i++){
    1,015,200 ( 0.02%)       608,850 ( 0.03%)    202,950 ( 0.07%) 1 ( 0.06%)    153,564 ( 0.50%)       0          1 ( 0.06%) 0               0             202,950 ( 0.11%)     454 ( 0.01%) .          .               for (j=0; j<c->tamy;j++){
  456,840,000 (10.74%)   273,982,500 (15.16%) 91,327,500 (32.21%) 0                   1 ( 0.00%)       0          0          0               0          91,327,500 (47.40%) 202,521 ( 6.38%) .          .                 for (k=0; k<a->tamy;k++){
3,098,250,000 (72.81%) 1,366,875,000 (75.62%) 91,125,000 (32.13%) 1 ( 0.06%) 30,396,322 (99.41%)       0          1 ( 0.06%) 2 ( 0.14%)      .                   .                .          .          .                   c->m[i][j] += a->m[i][k]*b->m[k][j];
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .                 }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .               }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             }
            4 ( 0.00%)             2 ( 0.00%)          .          .                   .                .          .          .               .                   .                .          .          .           }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .         Use of uninitialized value in numeric gt (>) at /usr/bin/callgrind_annotate line 1284.
Use of uninitialized value in numeric gt (>) at /usr/bin/callgrind_annotate line 1284.
             .                   .          .                   .                .          .          .               .                   .                .          .          .           void transpoeMatriz(mat_tipo *a)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Descricao: transpoe a matriz a
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Entrada: a
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Saida: a
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           {
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             int i,j,dim;
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             
-- line 227 ----------------------------------------
-- line 237 ----------------------------------------
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // inverte as dimensoes da matriz transposta
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             ELEMSWAP(a->tamx,a->tamy);
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           }
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           void destroiMatriz(mat_tipo *a)
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Descricao: destroi a matriz a, que se torna inacessível
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Entrada: a
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           // Saida: a
           15 ( 0.00%)             0                   6 ( 0.00%) 1 ( 0.06%)          0                0          1 ( 0.06%) .               .                   .                .          .          .           {
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // apenas um aviso se a matriz for destruida mais de uma vez
           24 ( 0.00%)            12 ( 0.00%)          0          0                   2 ( 0.00%)       0          0          0               0                   6 ( 0.00%)       3 ( 0.00%) .          .             avisoAssert(((a->tamx>0)&&(a->tamy>0)),"Matriz já foi destruida");
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .           
            .                      .                   .          .                   .                .          .          .               .                   .                .          .          .             // torna as dimensoes invalidas
           30 ( 0.00%)            21 ( 0.00%)          9 ( 0.00%) 2 ( 0.13%)          0                0          2 ( 0.13%) .               .                   .                .          .          .             a->id = a->tamx = a->tamy = -1;
            9 ( 0.00%)             6 ( 0.00%)          .          .                   .                .          .          .               .                   .                .          .          .           }

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./libio/./libio/fileops.c
  ./libio/./libio/genops.c
  ./libio/./libio/libioP.h
  ./stdio-common/./stdio-common/printf.c
  ./stdio-common/./stdio-common/printf_fp.c
  ./stdio-common/./stdio-common/vfprintf-internal.c
  ./stdlib/../sysdeps/x86_64/mul_1.S
  ./stdlib/../sysdeps/x86_64/rshift.S
  ./stdlib/./stdlib/cmp.c
  ./stdlib/./stdlib/divrem.c
  ./stdlib/./stdlib/drand48-iter.c
  ./stdlib/./stdlib/drand48.c
  ./stdlib/./stdlib/erand48_r.c
  ./stdlib/./stdlib/mul.c
  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/strchr-avx2.S

--------------------------------------------------------------------------------
Ir                     Dr                     Dw                   I1mr        D1mr                D1mw             ILmr        DLmr       DLmw            Bc                  Bcm              Bi Bim 
--------------------------------------------------------------------------------
3,578,270,196 (84.09%) 1,649,734,690 (91.27%) 186,284,480 (65.69%) 26 ( 1.65%) 30,575,543 (99.99%) 176,301 (98.78%) 26 ( 1.69%) 3 ( 0.20%) 92,189 (97.76%) 93,145,584 (48.35%) 206,396 ( 6.50%) .          .           events annotated

